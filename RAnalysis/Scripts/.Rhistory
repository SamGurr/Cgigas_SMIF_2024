dplyr::mutate(
Catalase_UmL = # new column
case_when( # dependencies of the new column  when...
Plate %in% 1 ~ SSasymp(Cat_Absorbance_560nm, 0.34, 7.30, 2.14),
Plate %in% 2 ~ SSasymp(Cat_Absorbance_560nm, 0.10, 6.35, 1.49)
#Plate %in% 1 ~ 0.82 + (-0.34 - 0.82) / (1 + (Cat_Absorbance_560nm / 24.77)^0.01), # column plate is 1, EQ,
#Plate %in% 2 ~ 1.66 + (-0.22 - 1.66) / (1 + (Cat_Absorbance_560nm / 5.63)^0.20) # column plate is 2, EQ,
),
Catalase_UmL_ng_protein =
Catalase_UmL / (TotalProtein_ug /1000),
Treatment =
case_when(
grepl("BL", Sample_ID) ~ "Baseline",
grepl("A1|A2|A3|B1|B2|B3", Sample_ID) ~ "Control",
grepl("A4|A5|A6|B4|B5|B6", Sample_ID) ~ "OA",
grepl("C1|C2|C3|D1|D2|D3", Sample_ID) ~ "HW"),
Time =
case_when(
grepl("BL", Sample_ID) ~ "Baseline",
grepl("T1", Sample_ID) ~ "1",
grepl("T2", Sample_ID) ~ "2",
grepl("T3", Sample_ID) ~ "3")
) %>%
dplyr::select(Plate, Sample_ID, Treatment, Time,
Cat_Absorbance_560nm, TotalProtein_ug,
Catalase_UmL, Catalase_UmL_ng_protein)
Catalase_Uml_ngprotein_final_MeanSE <- Catalase_Uml_ngprotein_final %>%
Rmisc::summarySE(measurevar = 'Catalase_UmL_ng_protein', groupvars = c('Sample_ID', 'Treatment' ,'Time'))
# first lets plot absorbance and actual concentration calacuated
calc_Catalase_plot <- Catalase_Uml_ngprotein_final %>%
ggplot(aes(y = Catalase_UmL,
x  = Cat_Absorbance_560nm)) +
geom_point() +
theme_bw() +
ggtitle('Catalase U mL: Calculated by Absorbance') +
facet_wrap(~Plate, scales  = 'free_y')
Stanmdards_CalcCatlase_plots <-  ggpubr::ggarrange(
ggpubr::ggarrange(Plate1_Catalase_curve, Plate2_Catalase_curve, nrow =1),
calc_Catalase_plot, nrow = 2)
Stanmdards_CalcCatlase_plots
calc_Catalase_plot <- Catalase_Uml_ngprotein_final %>%
ggplot(aes(y = Catalase_UmL,
x  = Cat_Absorbance_560nm)) +
geom_point() +
theme_bw() +
ggtitle('Catalase U mL: Calculated by Absorbance') +
facet_wrap(~Plate, scales  = 'free_y')
calc_Catalase_plot
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pd <- position_dodge2(width = 0.2)
Catalase_Uml_ngprotein_final_MeanSE %>%
group_by(Treatment, Time) %>%
dplyr::summarise( # summarise to aquire the mean and SE for plotting
Catalase_mean = mean(Catalase_UmL_ng_protein), # mean
Catalase_sd = sd(Catalase_UmL_ng_protein), # sd
n = n(), # count
Catalase_se = Catalase_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=Time, y=Catalase_mean, group=Treatment)) +
geom_line(aes(group = factor(Treatment)), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
# scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=Treatment, fill=Treatment), size = 4.5,position=position_dodge(.4)) +
# scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
# scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(Catalase_mean)-(Catalase_se),
ymax=(Catalase_mean)+(Catalase_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +#,
# legend.position = "none") +
ggtitle("Catalase") +
labs(y= "Catalase_UmL_ng_protein", x = "Time")
Catalase_Uml_ngprotein_final_MeanSE
Catalase_Uml_ngprotein_final_MeanSE %>%
group_by(Treatment, Time) %>%
dplyr::summarise( # summarise to aquire the mean and SE for plotting
Catalase_mean = mean(Catalase_UmL_ng_protein), # mean
Catalase_sd = sd(Catalase_UmL_ng_protein), # sd
n = n(), # count
Catalase_se = Catalase_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=Time, y=Catalase_mean, group=Treatment)) +
geom_line(aes(group = factor(Treatment)), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
# scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=Treatment, fill=Treatment), size = 4.5,position=position_dodge(.4)) +
# scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
# scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(Catalase_mean)-(Catalase_se),
ymax=(Catalase_mean)+(Catalase_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +#,
# legend.position = "none") +
ggtitle("Catalase") +
labs(y= "Catalase_UmL_ng_protein", x = "Time")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
Catalase_Uml_ngprotein_final_MeanSE <- Catalase_Uml_ngprotein_final %>% Rmisc::summarySE(groupvars = c('Plate','Treatment','Time', 'Sample_ID'), measurevar = 'Catalase_UmL_ng_protein')
Catalase_Uml_ngprotein_final_MeanSE
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
Catalase_MeanSE <- Catalase_Uml_ngprotein_final_MeanSE %>%
group_by(Treatment, Time) %>%
dplyr::summarise( # summarise to aquire the mean and SE for plotting
Catalase_mean = mean(Catalase_UmL_ng_protein), # mean
Catalase_sd = sd(Catalase_UmL_ng_protein), # sd
n = n(), # count
Catalase_se = Catalase_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=Time, y=Catalase_mean, group=Treatment)) +
geom_line(aes(group = factor(Treatment)), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
# scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=Treatment, fill=Treatment), size = 4.5,position=position_dodge(.4)) +
# scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
# scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(Catalase_mean)-(Catalase_se),
ymax=(Catalase_mean)+(Catalase_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +#,
# legend.position = "none") +
ggtitle("Catalase") +
labs(y= "Catalase_UmL_ng_protein", x = "Time")
Catalase_MeanSE
Catalase_MeanSE
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
Catalase_MeanSE <- Catalase_Uml_ngprotein_final_MeanSE %>%
group_by(Treatment, Time) %>%
dplyr::summarise( # summarise to aquire the mean and SE for plotting
Catalase_mean = mean(Catalase_UmL_ng_protein), # mean
Catalase_sd = sd(Catalase_UmL_ng_protein), # sd
n = n(), # count
Catalase_se = Catalase_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=Time, y=Catalase_mean, group=Treatment)) +
geom_line(aes(group = factor(Treatment)), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
# scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=Treatment, fill=Treatment), size = 4.5,position=position_dodge(.4)) +
# scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
# scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(Catalase_mean)-(Catalase_se),
ymax=(Catalase_mean)+(Catalase_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +#,
# legend.position = "none") +
ggtitle("Catalase (UmL ng protein-1") +
labs(y= "Catalase_UmL_ng_protein", x = "Time")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/CatalaseUmL_standard_curves.pdf", sep =''),
width=10,
height=6)
print(ggarrange(Plate1_Catalase_curve,Plate2_Catalase_curve, nrow = 1))
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/TotalProtein_standards.pdf", sep =''),
width=10,
height=8)
ggpubr::ggarrange(BCA_stand_plots_quadratic,
calc_BCA_plot,
nrow = 2)
ggpubr::ggarrange(BCA_stand_plots_quadratic,
calc_BCA_plot,
nrow = 2)
TotalProtein_final <- rbind(totalprotein_plate1.samples, totalprotein_plate2.samples) %>%
dplyr::select(Plate,
Sample_ID,
TP_Absorbance_562nm) %>%
# dplyr::filter(!Abs_562nm > 3.99) %>% # data as 4.00 is above the detection limit, omit
# dplyr::mutate(Unique_ID =
#                 paste0('Plate:',Plate,' ',
#                        'ID:',Sample_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_562nm_corrected = # correct the raw abs, subtract background
case_when(Plate == 1 ~ (TP_Absorbance_562nm-0.1289), # for plate 1
Plate == 2 ~ (TP_Absorbance_562nm-0.1336) ) ) %>% # for plate 2
dplyr::mutate(TotalProtein_ug_mL =
case_when(
# linear fr neg discrim. - luckily only two values from plate 2
# Scallop_ID %in% c(33, 51) ~
#   ((Abs_562nm_cor - 0.224)/0.000911),
# quadratic for Plate 1
Plate == 1 ~
((-(b1) + sqrt( (b1^2) - (4*a1*(c1-Abs_562nm_corrected)) ) ) / (2*a1)),
# quadratic for plate 2
Plate == 2 ~
((-(b2) + sqrt( (b2^2) - (4*a2*(c2-Abs_562nm_corrected)) ) ) / (2*a2)) ),
# ug per mL concentration to ug in 25 ul sample
TotalProtein_ug = TotalProtein_ug_mL*V) %>%
dplyr::mutate(Dilution_factor = 0,
Volume_ul = 25) %>%
dplyr::mutate(Abs_562nm_raw = TP_Absorbance_562nm) %>%
dplyr::select(Plate, Sample_ID, Abs_562nm_raw, Abs_562nm_corrected, Dilution_factor, Volume_ul, TotalProtein_ug, TotalProtein_ug_mL)
# View(TotalProtein_final)
nrow(TotalProtein_final) # 118
# first lets plot absorbance and actual concentration calacuated
calc_BCA_plot <- TotalProtein_final %>%
ggplot(aes(y = Abs_562nm_corrected,
x  = TotalProtein_ug_mL)) +
geom_point() +
theme_bw() +
ggtitle('Total protein: Calculated BCA by Net Absorbance') +
facet_wrap(~Plate)
calc_BCA_plot
ggpubr::ggarrange(BCA_stand_plots_quadratic,
calc_BCA_plot,
nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# write csv
write.csv(TotalProtein_final, file = "Output/catalase/Total_protein_master.csv")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/Total_protein_standard_curves.pdf", sep =''),
width=10,
height=7)
print(ggarrange(BCA_stand_plots_quadratic))
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/Total_Protein_standard_curve_and_data.pdf", sep =''),
width=10,
height=8)
ggpubr::ggarrange(BCA_stand_plots_quadratic,
calc_BCA_plot,
nrow = 2)
dev.off()
# write csv
write.csv(TotalProtein_final, file = "Output/catalase/Total_protein_master.csv")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/Total_Protein_standard_curves_with_data.pdf", sep =''),
width=10,
height=8)
ggpubr::ggarrange(BCA_stand_plots_quadratic,
calc_BCA_plot,
nrow = 2)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
Standard_curves_with_Catalasedata <-  ggpubr::ggarrange(
ggpubr::ggarrange(Plate1_Catalase_curve, Plate2_Catalase_curve, nrow =1),
calc_Catalase_plot, nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/CatalaseUmL_standard_curves_with_data.pdf", sep =''),
width=10,
height=6)
prinr(Standard_curves_with_Catalasedata)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/CatalaseUmL_standard_curves_with_data.pdf", sep =''),
width=10,
height=6)
print(Standard_curves_with_Catalasedata)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# write csv
write.csv(Catalase_Uml_ngprotein_final, file = "Output/catalase/Catalase_calculated_master.csv")
write.csv(Catalase_Uml_ngprotein_final_MeanSE, file = "Output/catalase/Catalase_calculated_masterMeanSE.csv")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/CatalaseUmL_ng_protein.pdf", sep =''),
width=6,
height=6)
print(Catalase_MeanSE)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/catalase/plots/CatalaseUmL_ng_protein.pdf", sep =''),
width=8,
height=6)
print(Catalase_MeanSE)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
Catalase_MeanSE <- Catalase_Uml_ngprotein_final_MeanSE %>%
group_by(Treatment, Time) %>%
dplyr::summarise( # summarise to aquire the mean and SE for plotting
Catalase_mean = mean(Catalase_UmL_ng_protein), # mean
Catalase_sd = sd(Catalase_UmL_ng_protein), # sd
n = n(), # count
Catalase_se = Catalase_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=Time, y=Catalase_mean, group=Treatment)) +
geom_line(aes(group = factor(Treatment)), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
# scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=Treatment, fill=Treatment), size = 4.5,position=position_dodge(.4)) +
# scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
# scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(Catalase_mean)-(Catalase_se),
ymax=(Catalase_mean)+(Catalase_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +#,
# legend.position = "none") +
ggtitle("Catalase (UmL ng protein-1)") +
labs(y= "Catalase_UmL_ng_protein", x = "Time")
pdf(paste("Output/catalase/plots/CatalaseUmL_ng_protein.pdf", sep =''),
width=8,
height=6)
print(Catalase_MeanSE)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
library(ggpubr)
library(ggplot2)
library(dplyr)
library(lmtest) # to receive p value from betareg model
# library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
library(emmeans)
library(tidyverse)
library(car)
library(lmerTest)
library(tidyr)
library(reshape2)
library(ggpubr)
library(nlme)
library(rcompanion) # to run the Schrier -Ray-Hare non parametric 2 way
library(ggpmisc) # stat_poly for inserting equation and R2 for ggplot line
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# objective to relate unique smaple IDs to treatment(s)
# the tric being to change the tube id in this raw format to match that in the plate metadata to merge later.. dont worry its easy!
exp.metadata <- read.csv('Data/experiment_metadata/SMIF_Sample_Info_SG_ParallelAnalyses.csv', sep = ",", header=T) %>%
select(c('Set', 'Tube.ID', 'Assay..SOD.CAT.')) %>%  # call target columns
filter(Assay..SOD.CAT. %in% 'SOD') %>%  # redundant sample ids for each assay, arbitrarily choose SOD to get unique IDs
mutate(Time = gsub("_.*", "", Tube.ID), # make column Time by calling everying before the first _
ID   = gsub("_", "", gsub("_S_B$", "", Tube.ID)),
Treatment = case_when(
grepl("Control", Set) ~ "control",
grepl("OA", Set) ~ "OA",
grepl("HW", Set) ~ "hypoxia",
TRUE ~ "baseline"
)) %>%
select(ID, Time, Treatment)
Spec_to_table <- function(datapath, platenumber, daterecorded) {
# import the data in raw text form exported from the spectrophotometer
rawtextfile <- read.delim(datapath,
header = F,
skip=3,
fileEncoding="latin1")
rawmatrix   <- as.matrix(rawtextfile[c(1:8),c(3:14)])
colnames(rawmatrix) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(rawmatrix) = c("A","B","C","D","E","F","G","H")
raw_table <- as.data.frame.table(rawmatrix, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, absorbance_nm=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date =daterecorded,
Plate=platenumber) %>%
dplyr::select(-c(well_row,well_column))
# reorder the columns because I prefer it this way..
raw_table_ordered <- raw_table[,c(3,4,2,1)]
}
# plate 1
SOD_plate1 <- Spec_to_table('Data/raw_data/superoxide_dismutase/20250226_sod_plate1.txt', 1, 20250226) %>%
dplyr::rename(SOD_Absorbance_450nm=absorbance_nm)
# plate 2
SOD_plate2 <- Spec_to_table('Data/raw_data/superoxide_dismutase/20250226_sod_plate2.txt', 2, 20250226) %>%
dplyr::rename(SOD_Absorbance_450nm=absorbance_nm)
# master
SOD_raw <- rbind(sod_plate1, sod_plate2)
SOD_raw
# plate 1
SOD_plate1 <- Spec_to_table('Data/raw_data/superoxide_dismutase/20250226_sod_plate1.txt', 1, 20250226) %>%
dplyr::rename(SOD_Absorbance_450nm=absorbance_nm)
SOD_plate1
Spec_to_table
library(ggpubr)
library(ggplot2)
library(dplyr)
library(lmtest) # to receive p value from betareg model
# library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
library(emmeans)
library(tidyverse)
library(car)
library(lmerTest)
library(tidyr)
library(reshape2)
library(ggpubr)
library(nlme)
library(rcompanion) # to run the Schrier -Ray-Hare non parametric 2 way
library(ggpmisc) # stat_poly for inserting equation and R2 for ggplot line
# objective to relate unique smaple IDs to treatment(s)
# the tric being to change the tube id in this raw format to match that in the plate metadata to merge later.. dont worry its easy!
exp.metadata <- read.csv('Data/experiment_metadata/SMIF_Sample_Info_SG_ParallelAnalyses.csv', sep = ",", header=T) %>%
select(c('Set', 'Tube.ID', 'Assay..SOD.CAT.')) %>%  # call target columns
filter(Assay..SOD.CAT. %in% 'SOD') %>%  # redundant sample ids for each assay, arbitrarily choose SOD to get unique IDs
mutate(Time = gsub("_.*", "", Tube.ID), # make column Time by calling everying before the first _
ID   = gsub("_", "", gsub("_S_B$", "", Tube.ID)),
Treatment = case_when(
grepl("Control", Set) ~ "control",
grepl("OA", Set) ~ "OA",
grepl("HW", Set) ~ "hypoxia",
TRUE ~ "baseline"
)) %>%
select(ID, Time, Treatment)
# objective to relate unique smaple IDs to treatment(s)
# the tric being to change the tube id in this raw format to match that in the plate metadata to merge later.. dont worry its easy!
exp.metadata <- read.csv('Data/experiment_metadata/SMIF_Sample_Info_SG_ParallelAnalyses.csv', sep = ",", header=T) %>%
select(c('Set', 'Tube.ID', 'Assay..SOD.CAT.')) %>%  # call target columns
filter(Assay..SOD.CAT. %in% 'SOD') %>%  # redundant sample ids for each assay, arbitrarily choose SOD to get unique IDs
mutate(Time = gsub("_.*", "", Tube.ID), # make column Time by calling everying before the first _
ID   = gsub("_", "", gsub("_S_B$", "", Tube.ID)),
Treatment = case_when(
grepl("Control", Set) ~ "control",
grepl("OA", Set) ~ "OA",
grepl("HW", Set) ~ "hypoxia",
TRUE ~ "baseline"
)) %>%
select(ID, Time, Treatment)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cgigas_SMIF_2024/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
library(ggpubr)
library(ggplot2)
library(dplyr)
library(lmtest) # to receive p value from betareg model
# library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
library(emmeans)
# library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
library(emmeans)
library(tidyverse)
library(emmeans)
# objective to relate unique smaple IDs to treatment(s)
# the tric being to change the tube id in this raw format to match that in the plate metadata to merge later.. dont worry its easy!
exp.metadata <- read.csv('Data/experiment_metadata/SMIF_Sample_Info_SG_ParallelAnalyses.csv', sep = ",", header=T) %>%
select(c('Set', 'Tube.ID', 'Assay..SOD.CAT.')) %>%  # call target columns
filter(Assay..SOD.CAT. %in% 'SOD') %>%  # redundant sample ids for each assay, arbitrarily choose SOD to get unique IDs
mutate(Time = gsub("_.*", "", Tube.ID), # make column Time by calling everying before the first _
ID   = gsub("_", "", gsub("_S_B$", "", Tube.ID)),
Treatment = case_when(
grepl("Control", Set) ~ "control",
grepl("OA", Set) ~ "OA",
grepl("HW", Set) ~ "hypoxia",
TRUE ~ "baseline"
)) %>%
select(ID, Time, Treatment)
exp.metadata
